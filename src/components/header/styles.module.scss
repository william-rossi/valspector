@import '../../app/styles/functions.scss';

.container {
    height: 12vh;
    width: 100%;
    border-bottom: 0.2vh solid #292929;
}

.subContainer {
    @include contentSize;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto;
    height: 100%;
}

.logo {
    font-size: 5vh;

    @media screen and (orientation: portrait) {
        font-size: 3.5vh;
    }

    color: var(--primary-color);
    letter-spacing: 0.3vh;
    font-weight: bold;
    text-shadow: 0px 0px 1vh var(--primary-color-o);
    user-select: none;
    cursor: pointer;
    transition: .2s;

    @media screen and (orientation: landscape) {
        &:hover {
            text-shadow: 0px 0px 3vh var(--primary-color-o);
        }
    }
}

@mixin glitchCopy {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.logo {
    position: relative;
    animation: glitch-skew 10s infinite linear alternate-reverse;

    &::before {
        @include glitchCopy;
        left: 2px;
        text-shadow: -2px 0 var(--fg-color);
        clip: rect(44px, 450px, 56px, 0);
        animation: glitch-anim 5s infinite linear alternate-reverse;
    }

    &::after {
        @include glitchCopy;
        left: -2px;
        text-shadow: -2px 0 var(--fg-color), 2px 2px var(--fg-color);
        clip: rect(44px, 450px, 56px, 0);
        animation: glitch-anim2 5s infinite linear alternate-reverse;
    }
}

@keyframes glitch-anim {
    $steps: 20;

    @for $i from 0 to $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100) + px, 9999px, random(100) + px, 0);
            transform: skew((random(100) / 100) + deg);
        }
    }
}

@keyframes glitch-anim2 {
    $steps: 20;

    @for $i from 0 to $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100) + px, 9999px, random(100) + px, 0);
            transform: skew((random(100) / 100) + deg);
        }
    }
}

@keyframes glitch-skew {
    $steps: 10;

    @for $i from 0 to $steps {
        #{percentage($i*(1/$steps))} {
            transform: skew((random(10) - 5) + deg);
        }
    }
}